{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["greenOptions","color","theme","getTheme","initializeIcons","App","useBoolean","isModalOpen","showModal","setTrue","hideModal","setFalse","React","useState","examplePersona1","imageUrl","TestImages","personaFemale","imageInitials","text","secondaryText","tertiaryText","optionalText","examplePersona2","personaMale","menuProps","items","key","iconProps","iconName","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","fieldData","map","cancha","Polygon","pathOptions","positions","geometry","coordinates","Popup","maxWidth","Stack","Item","properties","NAME","horizontal","DESCRIPTION","DefaultButton","split","onClick","Label","Persona","size","PersonaSize","size40","presence","PersonaPresence","away","hidePersonaDetails","imageAlt","online","style","boxShadow","effects","elevation64","src","IMAGES","width","height","Modal","isOpen","onDismiss","isBlocking","containerClassName","contentStyles","container","className","header","IconButton","styles","iconButtonStyles","cancelIcon","body","data","CLUBES","columns","COBERTURA","PARK_ID","mergeStyleSets","display","flexFlow","alignItems","fonts","xxLarge","flex","borderTop","palette","themePrimary","neutralPrimary","fontWeight","FontWeights","semibold","padding","overflowY","selectors","p","margin","marginTop","marginBottom","root","marginLeft","marginRight","rootHovered","neutralDark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec9763ab.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid } from 'gridjs-react';\nimport { Stack, IStackProps, mergeStyleSets, ContextualMenu, Toggle, Modal, IDragOptions, IIconProps, \n         Text, Link, FontWeights, IStackTokens, IContextualMenuProps, initializeIcons, getTheme } from '@fluentui/react';\nimport { useId, useBoolean } from '@fluentui/react-hooks';\nimport { IPersonaSharedProps, Persona, PersonaSize, PersonaPresence } from '@fluentui/react/lib/Persona';\nimport { MapContainer, TileLayer, Marker, Popup, Rectangle, Polygon } from 'react-leaflet';\nimport { DefaultButton, IconButton, IButtonStyles } from '@fluentui/react/lib/Button';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { TestImages } from '@fluentui/example-data';\nimport './App.css';\nimport * as fieldData from \"./datos/canchas-datos.json\";\nimport { LatLng, LatLngExpression, popup } from 'leaflet';\nimport { TData } from 'gridjs/dist/src/types';\n\nconst greenOptions = { color: 'green' }\nconst theme = getTheme();\n\ninitializeIcons();\n\nexport const App: React.FunctionComponent = () => {\n\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n  const [activeField, setActiveField] = React.useState(null);\n\n  const examplePersona1: IPersonaSharedProps = {\n    imageUrl: TestImages.personaFemale,\n    imageInitials: 'YJ',\n    text: 'Yackeline Jimenez',\n    secondaryText: 'Medallista olímpica',\n    tertiaryText: 'En una reunión',\n    optionalText: 'Disponible a las 4:00pm',\n  };\n\n  const examplePersona2: IPersonaSharedProps = {\n    imageUrl: TestImages.personaMale,\n    imageInitials: 'JP',\n    text: 'James Perez',\n    secondaryText: 'Profesional en recreación y deporte',\n    tertiaryText: 'Disponible',\n    optionalText: 'Disponible ahora mismo',\n  };\n\n  const menuProps: IContextualMenuProps = {\n    items: [\n      {\n        key: 'emailMessage',\n        text: 'Enviar email',\n        iconProps: { iconName: 'Mail' },\n      },\n      {\n        key: 'calendarEvent',\n        text: 'Agendar cita',\n        iconProps: { iconName: 'Calendar' },\n      },\n    ],\n  };\n\n  return (\n    <MapContainer center={[7.07249155397354, -73.8310737790208]} zoom={190} scrollWheelZoom={true}>\n      \n      <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n      {fieldData.canchas.map(cancha => (\n        <Polygon key = {cancha.properties.PARK_ID}\n                 pathOptions = {greenOptions}\n                 positions = {(cancha.geometry.coordinates) as unknown as LatLngExpression[][]}>\n                \n                <Popup maxWidth={600}>\n                  <Stack>\n                    {/* Titulo del lugar */}\n                    <Stack.Item>\n                      <h1>{cancha.properties.NAME}</h1>\n                    </Stack.Item>\n\n                    {/* Informacion general del lugar */}\n                    <Stack horizontal = {true}>\n                      <Stack>                      \n                        <Stack.Item>\n                          <h3>{cancha.properties.DESCRIPTION[0]}</h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <DefaultButton\n                            text=\"Más información\"\n                            split\n                            menuProps={menuProps}\n                            onClick={showModal}\n                          />\n                        </Stack.Item>\n\n                        <Stack.Item>\n                          <Label>Intructores</Label>\n                          <Persona\n                            {...examplePersona1}\n                            size={PersonaSize.size40}\n                            presence={PersonaPresence.away}\n                            hidePersonaDetails={false}\n                            imageAlt=\"Yackeline Jimenez, status is away\"\n                          />                         \n                        </Stack.Item>\n\n                        <Stack.Item>\n                          <Persona\n                              {...examplePersona2}\n                              size={PersonaSize.size40}\n                              presence={PersonaPresence.online}\n                              hidePersonaDetails={false}\n                              imageAlt=\"James Perez, status is online\"\n                            />\n                        </Stack.Item>\n                      </Stack>    \n\n                      <Stack>\n                        <div style={{ boxShadow: theme.effects.elevation64 }}>\n                            <img src = {cancha.properties.IMAGES[0]}\n                                width=\"100%\"\n                                height=\"100%\"/>                           \n                        </div>\n                        <Stack.Item>\n                          <p>{cancha.properties.DESCRIPTION[1]}</p>\n                        </Stack.Item> \n                      </Stack>\n                      \n                    </Stack>\n                  </Stack>\n\n                  <Modal isOpen={isModalOpen}\n                    onDismiss={hideModal}\n                    isBlocking={false}\n                    containerClassName={contentStyles.container}\n                    key={cancha.properties.PARK_ID}\n                  >\n                    <div className={contentStyles.header}>\n                      <span>{cancha.properties.NAME}</span>\n                      <IconButton\n                        styles={iconButtonStyles}\n                        iconProps={cancelIcon}\n                        onClick={hideModal}\n                      />\n                    </div>\n                    <div className={contentStyles.body}>\n                      <Stack horizontal={true}>\n                        {/* Descripciones e informacion */}\n                        <Stack>\n                          <Stack.Item>\n                            <h3>{cancha.properties.DESCRIPTION[0]}</h3>\n                            <h3>{cancha.properties.DESCRIPTION[1]}</h3>\n                          </Stack.Item>\n\n                          {/* Tabla de informacion del lugar */}\n                          <Stack.Item>\n                            <Grid data = {cancha.properties.CLUBES as unknown as TData} \n                                  columns={['CLUBES']}/>\n                          </Stack.Item>\n                          <Stack.Item>\n                            <Grid data = {cancha.properties.COBERTURA} \n                                  columns={['EDAD', 'CANTIDAD']}/>\n                          </Stack.Item>\n                        </Stack>\n\n                        {/* Fotos del lugar */}\n                        <Stack>\n                          <div style={{ boxShadow: theme.effects.elevation64 }}>\n                            <img src={cancha.properties.IMAGES[0]}\n                              width=\"100%\"\n                              height=\"100%\" />\n                          </div>\n\n                          <div style={{ boxShadow: theme.effects.elevation64 }}>\n                            <img src={cancha.properties.IMAGES[1]}\n                              width=\"100%\"\n                              height=\"100%\" />\n                          </div>\n\n                        </Stack>\n                      </Stack>\n                    </div>\n                  </Modal>\n                </Popup>\n        \n        \n        </Polygon>                  \n      ))}\n\n    </MapContainer>\n    );\n};\n\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'stretch',\n  },\n  header: [\n    theme.fonts.xxLarge,\n    {\n      flex: '1 1 auto',\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\n      color: theme.palette.neutralPrimary,\n      display: 'flex',\n      alignItems: 'center',\n      fontWeight: FontWeights.semibold,\n      padding: '12px 12px 14px 24px',\n    },\n  ],\n  body: {\n    flex: '4 4 auto',\n    padding: '0 24px 24px 24px',\n    overflowY: 'hidden',\n    selectors: {\n      p: { margin: '14px 0' },\n      'p:first-child': { marginTop: 0 },\n      'p:last-child': { marginBottom: 0 },\n    },\n  },\n});\n\nconst iconButtonStyles: Partial<IButtonStyles> = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: 'auto',\n    marginTop: '4px',\n    marginRight: '2px',\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\n\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { mergeStyles } from '@fluentui/react';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}